subopt <- c(0.7673809523809524,0.4454126984126984,0.4703492063492063,0.4000793650793651,0.3443015873015873,0.4531746031746032,0.556031746031746,0.5431587301587302,0.709047619047619,0.9241904761904762,0.5935079365079365,0.9414603174603176,0.6794603174603175,0.4435079365079365,0.3820793650793651,0.7718888888888888,0.4038253968253968,0.522047619047619,0.7530634920634921,0.7597777777777778,0.7085873015873017,0.7342063492063492,0.8034285714285714,0.5630793650793651,0.926984126984127,0.958,0.7739365079365079,0.7445555555555556,0.6026825396825397,0.5921428571428571,0.3794761904761905,0.4165396825396825,0.2725873015873016,0.876984126984127,0.5917301587301587,0.7565873015873016,0.8173650793650794,0.8343174603174603,0.8379365079365079,0.4661428571428571,0.914873015873016,0.4738888888888889,0.4603650793650794,0.3906031746031746,0.3716349206349206,0.513047619047619,0.3952698412698413,0.8702063492063492,0.9525873015873016,0.4049047619047619,0.6873492063492063,0.8610634920634921,0.7339206349206349,0.7407301587301587,0.4055079365079365,0.3218730158730159,0.3831587301587302,0.3803809523809524,0.3812698412698413,0.4500952380952381,0.9165079365079365,0.9493492063492063,0.8287777777777778,0.5085555555555556,0.3111269841269841,0.2239365079365079,0.494984126984127,0.5586666666666666,0.346968253968254,0.4733650793650794,0.6433809523809524)
 esdc-binary <- c(0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0)
 esdc.binary <- c(0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0)
m1 <- glm(esdc.binary ~ subopt)
summary(m1)
m1 <- glm(esdc.binary ~ subopt,family=binomial)
summary(m1)
exp(-2.735)
esdc.binary <- c(0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0)
m1 <- glm(esdc.binary ~ subopt,family=binomial)
exp(-2.735)
summary(m1)
cv.glm()
library(cvTools)
library(DAAG)
cv.binary(m1)
m1
CVbinary(m1)
CVbinary(m1 ,nfolds=5)
CVbinary(m1 ,m=5)
CVbinary(m1 ,nfolds=5)
CVbinary(obj=m1 ,nfolds=5)
CVbinary(obj=m1 ,nfolds=5,m=5)
rbind(subopt,esdc.binary)
cbind(subopt,esdc.binary)
df <- data.frame(cbind(subopt,esdc.binary))
head(df)
glm(esdc.binary ~ subopt, family=binomial)
summary(glm(esdc.binary ~ subopt, family=binomial))
summary(glm(esdc.binary ~ subopt, family=binomial,data=df))
esdc <- 0
summary(glm(esdc.binary ~ subopt, family=binomial,data=df))
CVbinary(df,m1,5)
m1
m1 <- glm(esdc.binary ~ subopt, family=binomial,data=df)
CVbinary(df,m1,5)
CVbinary(df,form.lm=m1,5)
CVbinary(df,=m1,5)
CVbinary(m1)
summary(CVbinary(m1))
summary(CVbinary(m1,nfolds=5))
library(ggplot)
library(ggplot2)
ggplot(df,aes(x=subopt,y=esdc.binary))+stat_smooth( aes(y = esdc.binary),  method="glm", family="binomial", se=F) 
ggplot(df,aes(x=subopt,y=esdc.binary))+stat_smooth( aes(y = esdc.binary),  method="glm", family="binomial", se=F) +geom_point()
ggplot(df,aes(x=subopt,y=esdc.binary))+stat_smooth( aes(x=subopt, y = esdc.binary),  method="glm", family="binomial", se=F)+geom_point()
ggplot(df,aes(x=subopt,y=esdc.binary))+stat_smooth(method="glm", family="binomial", se=F)+geom_point()
ggplot(df,aes(x=subopt,y=esdc.binary))+stat_smooth(method="glm", family="binomial", se=F)+geom_point()+xlim(0,1)
prob <- predict(m1,type=c("response"))
head(prob)
library(pROC)
df$prob <- prob
head(df)
plot(roc(esdc.binary ~ subopt, data=df))
ritz.ad <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0)
subopt
dim(ritz.ad)
dim(ritz.ad,1)
subopt <- c(0.8322539682539682,0.8277142857142857,0.7969047619047619,0.7820952380952381,0.7408095238095238,0.764984126984127,0.6172539682539683,0.5478571428571429,0.5159365079365079,0.5712063492063492,0.7191904761904762,0.9266984126984127,0.7777936507936508,0.9446984126984127,0.6934603174603176,0.4633492063492063,0.3874761904761905,0.7722063492063492,0.4261904761904762,0.530015873015873,0.750968253968254,0.8004126984126984,0.7184285714285714,0.7331746031746031,0.815952380952381,0.5676190476190476,0.9298412698412698,0.9656666666666667,0.7776666666666667,0.8160793650793651,0.6010793650793651,0.6033809523809524,0.400015873015873,0.4652380952380952,0.4118412698412698,0.8757619047619049,0.5972222222222222,0.7527460317460317,0.8123968253968255,0.8433809523809525,0.8361904761904762,0.4647301587301587,0.910968253968254,0.4753650793650794,0.4696349206349206,0.394031746031746,0.3736984126984127,0.5174126984126984,0.422015873015873,0.8771746031746032,0.9533333333333333,0.4035714285714286,0.6915079365079365,0.8691428571428571,0.7406825396825397,0.739031746031746,0.4124126984126984,0.3806984126984127,0.3891111111111111,0.3821746031746032,0.3826507936507937,0.4524761904761905,0.9183492063492062,0.951952380952381,0.8511904761904762,0.745047619047619,0.3983968253968254,0.3099206349206349,0.5893333333333333,0.7838730158730159,0.6750793650793651,0.7979047619047619,0.7781428571428571,0.833015873015873)
rbind(ritz.ad, subopt)
cbind(ritz.ad, subopt)
df <- data.frame(cbind(ritz.ad, subopt))
length(subopt)
length(ritz.ad)
df <- data.frame(cbind(ritz.ad, subopt[0:65]))
df <- data.frame(cbind(ritz.ad, subopt[0:66]))
ritz.ad.logit <- glm(ritz.ad ~ subopt, family=binomial,data=df)
df
ritz.ad.logit <- glm(ritz.ad ~ df$subopt, family=binomial,data=df)
ritz.ad.logit <- glm(df$ritz.ad ~ df$subopt, family=binomial)
ritz.ad.logit <- glm(ritz.ad ~ V2, family=binomial,data=df)
summary(ritz.ad.logit)
prob=predict(ritz.ad.logit,type=c("response"))
df$prob=prob
plot(roc(ritz.ad ~ V2, data=df))
ritz.ad <- c(0.309,1.341,1.023,0.916,0.795,0.902,0.285,0.264,0.438,0.159,0.322,0.106,0.711,1.836,0.808,0.61,0.385,0.129,0.616,0.651,1.72,0.582,0.138,0.901,0.874,0.569,1.222,1.198,0.585,0.314,1.426,0.515,0.682,0.51,0.757,0.304,0.444,0.365,1.299,0.826,0.824,0.727,2.22,1.535,1.384,0.629,0.491,0.854,0.924,0.792,0.991,2.012,1.148,0.579,0.864,0.642,0.243,0.29,0.131,0.899,1.372,0.192,0.09,0.227,0.501,0.297)
ritz.ad <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0)
ritz.ad.logit <- glm(ritz.ad ~ V2, family=binomial("logit"),data=df)
summary(ritz.ad.logit)
ritz.ad <- c(0.309,1.341,1.023,0.916,0.795,0.902,0.285,0.264,0.438,0.159,0.322,0.106,0.711,1.836,0.808,0.61,0.385,0.129,0.616,0.651,1.72,0.582,0.138,0.901,0.874,0.569,1.222,1.198,0.585,0.314,1.426,0.515,0.682,0.51,0.757,0.304,0.444,0.365,1.299,0.826,0.824,0.727,2.22,1.535,1.384,0.629,0.491,0.854,0.924,0.792,0.991,2.012,1.148,0.579,0.864,0.642,0.243,0.29,0.131,0.899,1.372,0.192,0.09,0.227,0.501,0.297)
sapply(ritz.ad,function(x){ ifelse(x > median(ritz.ad),1,0)})
ritz.ad$binary <- sapply(ritz.ad,function(x){ ifelse(x > median(ritz.ad),1,0)})
rita.ad
ritz.ad
ritz.ad <- c(0.309,1.341,1.023,0.916,0.795,0.902,0.285,0.264,0.438,0.159,0.322,0.106,0.711,1.836,0.808,0.61,0.385,0.129,0.616,0.651,1.72,0.582,0.138,0.901,0.874,0.569,1.222,1.198,0.585,0.314,1.426,0.515,0.682,0.51,0.757,0.304,0.444,0.365,1.299,0.826,0.824,0.727,2.22,1.535,1.384,0.629,0.491,0.854,0.924,0.792,0.991,2.012,1.148,0.579,0.864,0.642,0.243,0.29,0.131,0.899,1.372,0.192,0.09,0.227,0.501,0.297)
cbind(ritz.ad, sapply(ritz.ad,function(x){ ifelse(x > median(ritz.ad),1,0)}))
ritz.ad <- cbind(ritz.ad, sapply(ritz.ad,function(x){ ifelse(x > median(ritz.ad),1,0)}))
head(ritz.ad)
colnames(ritz.ad) <- c("raw.esdc","binary.esdc")
head(ritz.ad)
subopt <- c(0.4557936507936508,0.4756349206349206,0.3875238095238095,0.3446825396825397,0.4546984126984127,0.5457301587301587,0.5559047619047619,0.6924285714285714,0.9199365079365079,0.5782380952380952,0.941,0.6776190476190476,0.445968253968254,0.3857936507936508,0.7704285714285714,0.402968253968254,0.517095238095238,0.7458253968253968,0.7592539682539683,0.7067619047619048,0.7298571428571429,0.8066666666666668,0.5591111111111111,0.9273015873015873,0.9585079365079365,0.7737619047619048,0.7554761904761905,0.5986825396825397,0.5965396825396825,0.3834285714285714,0.4186190476190476,0.2774126984126984,0.8782857142857143,0.5961269841269841,0.758015873015873,0.8164444444444444,0.8348253968253968,0.8383809523809524,0.4630952380952381,0.9131111111111111,0.4815079365079365,0.4660952380952381,0.3916666666666667,0.371031746031746,0.5085555555555556,0.3926666666666667,0.8759206349206349,0.9476349206349206,0.4013492063492063,0.6950793650793651,0.861,0.7317460317460317,0.7345238095238095,0.4064285714285714,0.3256031746031746,0.3841269841269841,0.3788730158730159,0.3795714285714286,0.4425714285714286,0.9078253968253968,0.9461904761904762,0.8314761904761905,0.5245714285714286,0.3277936507936508,0.2331746031746032,0.4945079365079365)
length(subopt)
ritz.ad$subopt <- subopt
ritz.ad <- c(0.309,1.341,1.023,0.916,0.795,0.902,0.285,0.264,0.438,0.159,0.322,0.106,0.711,1.836,0.808,0.61,0.385,0.129,0.616,0.651,1.72,0.582,0.138,0.901,0.874,0.569,1.222,1.198,0.585,0.314,1.426,0.515,0.682,0.51,0.757,0.304,0.444,0.365,1.299,0.826,0.824,0.727,2.22,1.535,1.384,0.629,0.491,0.854,0.924,0.792,0.991,2.012,1.148,0.579,0.864,0.642,0.243,0.29,0.131,0.899,1.372,0.192,0.09,0.227,0.501,0.297)
ritz.ad <- cbind(c(0.309,1.341,1.023,0.916,0.795,0.902,0.285,0.264,0.438,0.159,0.322,0.106,0.711,1.836,0.808,0.61,0.385,0.129,0.616,0.651,1.72,0.582,0.138,0.901,0.874,0.569,1.222,1.198,0.585,0.314,1.426,0.515,0.682,0.51,0.757,0.304,0.444,0.365,1.299,0.826,0.824,0.727,2.22,1.535,1.384,0.629,0.491,0.854,0.924,0.792,0.991,2.012,1.148,0.579,0.864,0.642,0.243,0.29,0.131,0.899,1.372,0.192,0.09,0.227,0.501,0.297), sapply(ritz.ad,function(x){ ifelse(x > median(ritz.ad),1,0)}))
ritz.ad <- cbind(c(0.309,1.341,1.023,0.916,0.795,0.902,0.285,0.264,0.438,0.159,0.322,0.106,0.711,1.836,0.808,0.61,0.385,0.129,0.616,0.651,1.72,0.582,0.138,0.901,0.874,0.569,1.222,1.198,0.585,0.314,1.426,0.515,0.682,0.51,0.757,0.304,0.444,0.365,1.299,0.826,0.824,0.727,2.22,1.535,1.384,0.629,0.491,0.854,0.924,0.792,0.991,2.012,1.148,0.579,0.864,0.642,0.243,0.29,0.131,0.899,1.372,0.192,0.09,0.227,0.501,0.297), sapply(ritz.ad,function(x){ ifelse(x > median(ritz.ad),1,0)}), subopt)
head(ritz.ad)
colnames(ritz.ad) <- c("esdc.raw","esdc.binary")
colnames(ritz.ad) <- c("esdc.raw","esdc.binary","subopt")
head(ritz.ad)
 ritz.ad.df <- data.frame(ritz.ad)
ritz.ad.logit <- glm(esdc.binary ~ subopt, family=binomial("logit"),data=ritz.ad.df)
summary(ritz.ad.logit)
plot.roc <- function(glm){prob=predict(glm,type=c("response"))
ritz.ad.df$prob=prob
plot(roc(esdc.binary ~ subopt, data=ritz.ad.af))}
plot.roc <- function(glm){prob=predict(glm,type=c("response")) ritz.ad.df$prob=prob plot(roc(esdc.binary ~ subopt, data=ritz.ad.df))}
plot.roc <- function(glm){prob=predict(glm,type=c("response"))
ritz.ad.df$prob=prob
plot(roc(esdc.binary ~ subopt, data=ritz.ad.df))}
plot.roc(ritz.ad.logit)
head(ritz.ad.df)
prob=predict(ritz.ad.logit,type=c("response"))
ritz.ad.df$prob=prob
head(ritz.ad.df)
plot(roc(esdc.binary ~ subopt, data=ritz.ad.df))}
plot(roc(esdc.binary ~ subopt, data=ritz.ad.df))
plot(roc(esdc.binary ~ prob, data=ritz.ad.df))
roc(esdc.binary ~ prob, data=ritz.ad.df)
plot(roc(esdc.binary ~ prob, data=ritz.ad.df))
ritz.ad.df
ritz.ad.df[1:66,]
ritz.ad.df <- ritz.ad.df[1:66,]
plot(roc(esdc.binary ~ prob, data=ritz.ad.df))
roc(esdc.binary ~ prob, data=ritz.ad.df)
probs=predict(ritz.ad.logit,type=c("response"))
ritz.ad.df$probs <- probs
ritz.ad.df$probs= probs
ritz.ad.df
probs
roc(esdc.binary ~ prob, data=ritz.ad.df)
plot(roc(esdc.binary ~ prob, data=ritz.ad.df))
ritz.ad.logit <- glm(esdc.binary ~ subopt, family=binomial("logit"),data=ritz.ad.df)
probs=predict(ritz.ad.logit,type=c("response"))
ritz.ad.df$probs= probs
plot(roc(esdc.binary ~ prob, data=ritz.ad.df))
roc(esdc.binary ~ prob, data=ritz.ad.df)
probs
ritz.ad.logit <- glm(esdc.binary ~ subopt, family=binomial,data=ritz.ad.df)
probs=predict(ritz.ad.logit,type=c("response"))
ritz.ad.df$probs= probs
roc(esdc.binary ~ prob, data=ritz.ad.df)
plot(roc(esdc.binary ~ prob, data=ritz.ad.df))
plot(roc(esdc.binary ~ probs, data=ritz.ad.df))
prob=predict(ritz.ad.logit,type=c("response"))
ritz.ad.df$prob= prob
plot(roc(esdc.binary ~ probs, data=ritz.ad.df))
plot(roc(esdc.binary ~ prob, data=ritz.ad.df))
head(ritz.ad.df)
plot(roc(esdc.binary ~ prob, data=ritz.ad.df))
ritz.ad.logit <- glm(esdc.binary ~ esdc.raw, family=binomial,data=ritz.ad.df)
ritz.ad.logit <- glm(esdc.binary ~ subopt, family=binomial,data=ritz.ad.df)
prob=predict(ritz.ad.logit,type=c("response"))
ritz.ad.df$prob=prob
plot(roc(esdc.binary ~ prob, data=ritz.ad.df))
plot.roc.roc(roc(esdc.binary ~ prob, data=ritz.ad.df))
data <- read.csv("/home/kitia/Downloads/ritz-esdc-subopt.csv")
head(data)
df <- data.frame(data)
head(df)
median(df$esdc)
sapply(df$esdc,function(x){ifelse(x>median(df$esdc),1,0)})
esdc.binary <- sapply(df$esdc,function(x){ifelse(x>median(df$esdc),1,0)})
df$esdc.binary <- esdc.binary
head(df)
m1 <- glm(esdc.binary ~ subopt,family=binomial,data=df)
summary(m1)
probs <- predict(m1,type=c("response"))
df$probs <- probs
head(df)
plot.roc.roc(roc(esdc.binary ~ subopt, data=df))
summary(df$esdc)
quantile(df$esdc, c(.9))
esdc.binary <- sapply(df$esdc,function(x){ifelse(x>1.2997,1,0)})
df$esdc.binary.90 <- esdc.binary
head(df)
m1 <- glm(esdc.binary.90 ~ subopt,family=binomial,data=df)
probs <- predict(m1,type=c("response"))
df$probs.90 <- probs
plot.roc.roc(roc(esdc.binary.90 ~ probs.90, data=df))
plot.roc.roc(roc(esdc.binary ~ probs, data=df))
df<-data.frame(read.csv("~/bin/gaisr/robustness/compare-bpdist/robust-by-function.csv"))
head(df)
df<-data.frame(read.csv("~/bin/gaisr/robustness/compare-bpdist/mean-robust-by-family.csv"))
df<-data.frame(read.csv("~/bin/gaisr/robustness/compare-bpdist/mean-robust-by-family.csv"))
head(df)
ggplot(df,aes(x=name,y=mean.wt.neut))+geom_bar()
library(reshape2)
melt(df, id.vars="name")
melt(df, id.vars="name",variable.name=mean.wt.neut)
melt(df, id.vars="name",varname=mean.wt.neut)
melt(df, id.vars=c("name","function"))
melt(df, id=c("name","function"))
melt(df, id=c("name","function."))
melt(df, id=c("name","function."),variable.name=c("mean.wt.neut","mean.invfold.neut"))
melt(df, id=c("name","function."),variable.names=c("mean.wt.neut","mean.invfold.neut"))
subset(melt(df, id=c("name","function."),variable.names=c("mean.wt.neut","mean.invfold.neut")), variable == "mean.wt.neut" | variable=="mean.invfold.neut")
df2 <- subset(melt(df, id=c("name","function."),variable.names=c("mean.wt.neut","mean.invfold.neut")), variable == "mean.wt.neut" | variable=="mean.invfold.neut")
ggplot(df2,aes(x=name,y=value))+geom_bar()
ggplot(df2,aes(x=name,y=value,group=variable))+geom_bar()
df2$value
head(df2)
ggplot(df2,aes(x=name,y=value,group=variable))+geom_bar()
df2
df2$value
length(df2$value)
df2$name
ggplot(df2,aes(x=name,y=value,group=variable))+geom_line()
ggplot(df2,aes(x=name,group=variable)) + geom_bar()
ggplot(df2,aes(x=value,group=variable)) + geom_bar()
ggplot(df2,aes(x=value,y=value,group=variable)) + geom_bar()
ggplot(df2,aes(x=value,y=value,group=variable)) + geom_bar(stat="identity")
ggplot(df2,aes(x=name,y=value,group=variable)) + geom_bar(stat="identity")
ggplot(df2,aes(x=name,y=value,fill=variable)) + geom_bar(stat="identity")
ggplot(df2,aes(x=name,y=value,fill=variable)) + geom_bar(stat="position")
ggplot(df2,aes(x=name,y=value,fill=variable)) + geom_bar(stat="identity",position="dodge")
melt(df, id=c("name","function."),variable.names=c("se.wt.neut","se.invfold.neut"))
melt(df, id=c("name","function.","se.wt.neut","se.invfold.neut"),variable.names=c("mean.wt.neut","mean.invfold.neut"))
ggplot(df2,aes(x=name,y=value,fill=variable)) + geom_bar(stat="identity",position="dodge")+facet_wrap(~name,nrow=1)
ggplot(df2,aes(x=variable,y=value,fill=variable)) + geom_bar(stat="identity",position="dodge")+facet_wrap(~name,nrow=1)
ggplot(df2,aes(x=variable,y=value,fill=variable)) + geom_bar(stat="identity",position="dodge")+facet_wrap(~name,nrow=2)
ggplot(df2,aes(x=variable,y=value,fill=variable)) + geom_bar(stat="identity",position="dodge")+facet_wrap(~name,nrow=3)
ggplot(df2,aes(x=variable,y=value,fill=variable)) + geom_bar(stat="identity",position="dodge")+facet_wrap(function.~name,nrow=3)
ggplot(df2,aes(x=variable,y=value,fill=variable)) + geom_bar(stat="identity",position="dodge")+facet_wrap(~function.,nrow=3)
ggplot(df2,aes(x=name,y=value,fill=variable)) + geom_bar(stat="identity",position="dodge")+facet_wrap(~function.,nrow=3)
ggplot(df2,aes(x=name,y=value,fill=variable)) + geom_bar(stat="identity",position="dodge")+facet_wrap(~function.,nrow=3,scale="x_free")
ggplot(df2,aes(x=name,y=value,fill=variable)) + geom_bar(stat="identity",position="dodge")+facet_wrap(~function.,nrow=3,scale="free_x")
ggplot(df2,aes(x=name,y=value,fill=variable)) + geom_bar(stat="identity",position="dodge")+facet_wrap(~function.,ncol=1,scale="free_x")
 >head(df2)
head(df2)
melt(df, id=c("name","function.","se.wt.neut","se.invfold.neut"),variable.names=c("mean.wt.neut","mean.invfold.neut") )
melt(df, id=c("name","function."),variable.names=c("mean.wt.neut","mean.invfold.neut") )
melt(df, id=c("name","function."),measure.var=c("mean.wt.neut","mean.invfold.neut") )
x <- melt(df, id=c("name","function."),measure.var=c("mean.wt.neut","mean.invfold.neut") )
y <- melt(df, id=c("name","function."),measure.var=c("se.wt.neut","se.invfold.neut") )
y
cbind(x,y$value)
df2 <- cbind(x,y$value)
 colnames(df2) <- c(name,function.,variable,neut,se)
 colnames(df2) <- c("name","function.","variable","neut","se")
head(df2)
 ggplot(df2,aes(x=name,y=value,fill=variable))+geom_bar()+geom_errorbar(aes(ymin=value-se,ymax=value+se))+facet(~ function.,ncol=1)
 ggplot(df2,aes(x=name,y=value,fill=variable))+geom_bar()+geom_errorbar(aes(ymin=value-se,ymax=value+se))+facet_wrap(~ function.,ncol=1)
 ggplot(df2,aes(x=name,y=value,fill=variable))+geom_bar(position="dodge")+geom_errorbar(aes(ymin=value-se,ymax=value+se))+facet_wrap(~ function.,ncol=1)
 ggplot(df2,aes(x=name,y=value,fill=variable))+geom_bar(stat="identity",position="dodge")+geom_errorbar(aes(ymin=value-se,ymax=value+se))+facet_wrap(~ function.,ncol=1)
 ggplot(df2,aes(x=name,y=neut,fill=variable))+geom_bar(stat="identity",position="dodge")+geom_errorbar(aes(ymin=neut-se,ymax=neut+se))+facet_wrap(~ function.,ncol=1)
 ggplot(df2,aes(x=name,y=neut,fill=variable))+geom_bar(stat="identity",position="dodge")+geom_errorbar(aes(ymin=neut-se,ymax=neut+se))+facet_wrap(~ function.,ncol=1,free_x=TRUE)
 ggplot(df2,aes(x=name,y=neut,fill=variable))+geom_bar(stat="identity",position="dodge")+geom_errorbar(aes(ymin=neut-se,ymax=neut+se))+facet_wrap(~ function.,ncol=1,scales="free_x")
 ggplot(df2,aes(x=name,y=neut,fill=variable))+geom_bar(stat="identity",position="dodge")+geom_errorbar(aes(ymin=neut-se,ymax=neut+se),position="dodge")+facet_wrap(~ function.,ncol=1,scales="free_x")
melt(df, id.vars="name",variable.name=mean.wt.neut)
ggplot(df2,aes(x=name,y=neut,fill=variable))+
    geom_bar(stat="identity",position="dodge")+
    geom_errorbar(aes(ymin=neut-se,ymax=neut+se),position="dodge")+
    facet_wrap(~ function.,ncol=1,scales="free_x")+
    theme(axis.text.x=element_text(vjust=1,hjust=1,angle=45),
          panel.grid=element_blank()
melt(df, id.vars="name",variable.name=mean.wt.neut)  C-c C-c
head(ritz.df)
esdc.binary
head(ritz.df)
head(ritz.df)
sapply(ritz.df,function(x){ ifelse(x > 1.2 ,1,0)})
esdc.binary
head(ritz.df)
summary(mod1)
probs <- predict(mod1,type=c("response"))
ritz.df$probs <- probs
plot.roc.roc(roc(esdc.binary ~ probs, ritz.df))
summary(mod1)
21/(333+21)
ggsave("~/bin/gaisr/robustness/compare-bpdist/mean-robust-by-family.pdf")
library("e1071")
?svm
df <- data.frame(read.csv("~/bin/gaisr/robustness/compare-neutrality/neutrality-distribution-trainset3-1.csv"))
head(df)
grep("neg", "abcneg")
grep("neg", "abc")
sapply(df$distance.measure,function(x) { ifelse(grep("neg",x),0,1)})
negset <- sapply(df$distance.measure,function(x) { ifelse(grep("neg",x),0,1)})
head(negset)
negset <- sapply(df$distance.measure,function(x) { ifelse(grep("neg",x)==0,0,1)})
head(negset)
negset <- sapply(df$distance.measure,function(x) { ifelse(grep("neg",x)==[0],0,1)})
negset <- sapply(df$distance.measure,function(x) { ifelse(grep("neg",x)==c(0),0,1)})
head(negset)
grep("neg" "abcneg")
grep("neg", "abcneg")
grep("neg", "abc")
grepl("neg", "abc")
negset <- sapply(df$distance.measure,function(x) { ifelse(grepl("neg",x)==c(0),0,1)})
head(negset)
negset <- sapply(df$distance.measure,function(x) { ifelse(grepl("neg",x)==c(0),1,0)})
negset <- sapply(df$distance.measure,function(x) { ifelse(grepl("neg",x),1,0)})
head(negset)
negset <- sapply(df$distance.measure,function(x) { ifelse(grepl("neg",x),0,1)})
head(negset)
head(df)
df$test.set <- negset
head(df)
model <- svm(test.set ~ neutrality + distance.metric, data=df,type="C-classification",kernel="radial basis")
model <- svm(test.set ~ neutrality + distance.metric, data=df,type="C-classification",kernel="radial")
print(model)
summary(model)
pred <- predict(model,df$neutrality)
pred <- predict(model,cbind(df$neutrality,df$distance.metric))
x <- subset(df,distance.metric=="subopt")
head(x)
x <- subset(df,distance.metric=="subopt" && grepl(distance.measure,"shuffle"))
head(x)
x <- subset(df,distance.metric=="subopt" && grepl(distance.measure,"shuffle"))
x <- subset(df,distance.metric=="subopt" & grepl(distance.measure,"shuffle"))
x <- subset(df,distance.metric=="subopt" && grepl(distance.measure,"shuffle"))
x
x <- subset(df,distance.metric=="subopt" & grepl(distance.measure,"shuffle"))
x <- subset(df,distance.metric=="subopt" & grepl("shuffle",distance.measure))
head(x)
x <- subset(df,distance.metric=="subopt" & !grepl("shuffle",distance.measure))
head(x)
model <- svm(test.set ~ neutrality data=x,type="C-classification",kernel="radial")
model <- svm(test.set ~ neutrality, data=x,type="C-classification",kernel="radial")
model <- svm(test.set ~ neutrality, data=x,type="C-classification",kernel="radial",k=10)
summary(model)
print(model)
table(model)
pred <- predict(model,x$neutrality)
pred <- predict(model,x)
table(pred,x$test.set)
head(x)
length(subset(x,grepl("neg",distance.measure)))
dim(subset(x,grepl("neg",distance.measure)))
dim(subset(x,grepl("pos",distance.measure)))
493+113
493+242
pred
table(pred,x$test.set)
summary(table(pred,x$test.set))
242/(493+242)
1345/(1345+113)
roc(model,pred)
predict(model,type=c("response"))
pred <- predict(model,type=c("response"))
x$pred <-  pred
head(x)
roc(test.set ~ pred,x)
roc(test.set ~ neutrality,x)
model$probA
model$probB
model$decision.values
model$call
model$compprob
model$coefs
model$coef0
model <- svm(test.set ~ neutrality, data=x,type="C-classification",kernel="radial",k=10,probability=TRUE)
pred <- predict(model,type=c("response"))
x$pred <-  pred
model$probA
model$probB
pred
roc(test.set ~ neutrality,x)
head(x)
model1
model2
head(subopt)
head(subopt)
subset(df,distance.metric == "subopt")
head(subset(df,distance.metric == "subopt"))
head(subopt)
plot.roc.roc(roc(test.set ~ neutrality, bpdist))
plot.roc.roc(roc(test.set ~ neutrality, pcc))
plot.roc.roc(roc(test.set ~ neutrality, subopt))
plot.roc.roc(roc(test.set ~ neutrality, pcc, add=TRUE))
plot.roc.roc(roc(test.set ~ neutrality, subopt, add=TRUE))
plot.roc.roc(roc(test.set ~ neutrality, subopt,add=TRUE))
plot.roc.roc(roc(test.set ~ neutrality, pcc),add=TRUE)
plot.roc.roc(roc(test.set ~ neutrality, bpdist),add=TRUE)
1.4*1.4
125/150
pcontrol0
pcase0
Pcase0
setwd("/home/kitia/Dropbox/Statistical genetics/final project")
head(mydat1)
1-7333/8000
1-7543/8000
head(mydat1)
weights
head(xxx)
head(mydat1)
mydat1[,8]
xxx
head(xxx)
head(MB)
head(mydat1.6)
table(mydat1.6$ApoE4)
sum(table(mydat1.6$ApoE4))
1-.916
apply(mydat1,2,table)

head(mydat1)

apply(mydat1, 2, table)

apply(mydat1, 2, prop.table)

apply(mydat1[,5:16], 2, table)

apply(mydat1[,5:16], 2, prop.table)

apply(mydat1[,5:16], 2, table)

apply(mydat1[,5:16], 2, function(x){table(x)/4000})

sapply(apply(mydat1[,5:16], 2, function(x){table(x)/4000}),cbind)

sapply(apply(mydat1[,5:16], 2, function(x){table(x)/4000}),rbind)
502/(502+94+4)
94/(502+94+4)
1-.8367-.1567
486/(486+107+7)
107/(486+107+7)
1-.81-.1783
table(mydat2.2$ApoE4)
prop.table(mydat2.2$ApoE4)
prop.table(mydat2.2$ApoE4,2)
prop.table(mydat2.2$ApoE4,1)
table(mydat2.2$ApoE4)
295/(295+259+46)
486+107+7
295+259+46
head(mydat2.2)
table(mydat2.2$ApoE4)/600
1-.4917-.4317
1-.9067-.0917
table(mydat2.1$ApoE4)/600
1-.5883-.36
544*2+55
544*2+55+55+2
c(502*2+94,94+2*4)/1200
c(486*2+107, 107+7*2)/1200
table(mydat2.1$ApoE4)
table(mydat2.1$ApoE4)
c(353*2+216)
c(353*2+216)/1200
c(353*2+216, 216+31*2)/1200
table(mydat2.2$ApoE4)
c(295*2+259, 259+2*46)/1200
exp(2*.5065)
(exp(2*.5065)-1)/2
(exp(2*.5065)+1)/2
mean(mydat1$age)
mean(mydat2$age)
table(mydat1$sex)
table(mydat1.1$sex)
table(mydat1.2$sex)
table(mydat2$sex)
hwep
0.5/3
mod <- glm(sex~MB,family=binomial(
"logit"),data=mydat1)
mod <- glm(sex~MB,family=binomial("logit"),data=mydat1)
ifelse(mydat1$sex==1,0,1)
mydat1$sex2=ifelse(mydat1$sex==1,0,1)
head(mydat1)
mod <- glm(sex2~MB,family=binomial("logit"),data=mydat1)
summary(mod)
head(mydat1.2)
head(mydat2.2)
library(survival)
library(coin)
2.78-1.96*.376
head(mydat2.2)
summary(cmod3)
1+11
q()
n
